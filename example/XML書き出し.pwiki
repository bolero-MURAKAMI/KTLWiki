*目次 [#contents-]
#contents



*概要
-必要DLL~
--ktl_ptree.dll（または ktl_ptree-d.dll）~

-外部DLL~
--icudt46.dll %%icudt45.dll%% %%icudt44.dll%% (2011/02/03 更新)~
--icuuc46.dll %%（または icuuc46d.dll）%% %%icuuc44.dll（または icuuc44d.dll）%% %%icuuc45.dll（または icuuc45d.dll）%% (2011/02/03 更新)~

-スクリプト~
--[[ktl/PTree.tjs]]~

-クラス~
--PTree クラス~



*XML書き出し
 /* スクリプトのロード */
 Scripts.execStorage("ktl/PTree.tjs");
 
 /* PTree のインスタンス作成 */
 var ptree = new PTree();
 
 /*
     ...読み込み、操作など...
 */
 
 /* settings.xml へ書き出し */
 ptree.writeStorageXML(System.exePath + "settings.xml", "UTF-8");

-PTree クラス~
--XML,JSON等のような構造化データの読み書きや操作を行う。~

-PTree.writeStorageXML メソッド~
--シグネチャ:~
---PTree.writeXMLToOctet(storage, code = "UTF-16", indent_char = #" ", indent_count = 4)~
--木構造をXMLで、ローカルストレージへ書き出す。~
--第１引数にはストレージのパス文字列を渡す。~
--第２引数には、エンコードする文字コード名を渡すことができる(デフォルト=UTF-16)。~
--第３引数には、インデントのための文字を渡すことができる(デフォルト=半角スペース)。~
--第４引数には、インデント単位の文字数を渡すことができる(デフォルト=4文字)。~
--成功した場合は書き込まれたバイト数、失敗した場合は負値を返す。~

-PTree.writeXMLToString メソッド~
--シグネチャ:~
---PTree.writeXMLToString(indent_char = #" ", indent_count = 4)~
--木構造をXMLで、文字列へ書き出す。~
--第１引数には、インデントのための文字を渡すことができる(デフォルト=半角スペース)。~
--第２引数には、インデント単位の文字数を渡すことができる(デフォルト=4文字)。~
--失敗した場合は void を返す。~

-PTree.writeXMLToOctet メソッド~
--シグネチャ:~
---PTree.writeXMLToOctet(code, indent_char = #" ", indent_count = 4)~
--木構造をXMLで、オクテット列へ書き出す。~
--第１引数には、エンコードする文字コード名を渡す。~
--第２引数には、インデントのための文字を渡すことができる(デフォルト=半角スペース)。~
--第３引数には、インデント単位の文字数を渡すことができる(デフォルト=4文字)。~
--失敗した場合は void を返す。~
