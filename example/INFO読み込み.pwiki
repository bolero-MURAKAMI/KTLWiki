*目次 [#contents-]
#contents



*概要
-必要DLL~
--ktl_ptree.dll（または ktl_ptree-d.dll）~

-外部DLL~
--icudt46.dll %%icudt45.dll%% %%icudt44.dll%% (2011/02/03 更新)~
--icuuc46.dll %%（または icuuc46d.dll）%% %%icuuc44.dll（または icuuc44d.dll）%% %%icuuc45.dll（または icuuc45d.dll）%% (2011/02/03 更新)~

-スクリプト~
--[[ktl/PTree.tjs]]~

-クラス~
--PTree クラス~



*INFO読み込み
 /* スクリプトのロード */
 Scripts.execStorage("ktl/PTree.tjs");
 
 /* PTree のインスタンス作成 */
 var ptree = new PTree();
 
 /* settings.info の読み込み */
 ptree.readStorageINFO(System.exePath + "settings.info", "UTF-8");

-PTree クラス~
--XML,JSON等のような構造化データの読み書きや操作を行う。~

-PTree.readINFO メソッド~
--シグネチャ:~
---PTree.readINFO(str)~
---PTree.readINFO(octet, code)~
--文字列またはオクテット列から、INFOを読み込む。~
--第１引数にはソースとなる文字列またはオクテット列を渡す。~
--ソースがオクテット列の場合、第２引数にはオクテット列が表現する文字コード名を渡す。~
--処理に成功した場合はtrue、失敗した場合はfalseを返す。~

-PTree.readStorageINFO メソッド~
--シグネチャ:~
---PTree.readStorageINFO(storage)~
---PTree.readStorageINFO(storage, code)~
--ローカルストレージから、INFOを読み込む。~
--第１引数にはストレージのパス文字列を渡す。~
--第２引数にはストレージの内容が表現する文字コード名を渡すことができる。~
--処理に成功した場合はtrue、失敗した場合はfalseを返す。~



*INFO形式について
-概要~
--Boost.PropertyTree ライブラリによる独自フォーマット。~
--汎用的な木構造を効率的にシリアライズできる。~
-Boost.PropertyTree ドキュメント~
　■[[How to Populate a Property Tree:http://www.boost.org/doc/libs/1_43_0/doc/html/boost_propertytree/parsers.html#boost_propertytree.parsers.info_parser]]

